=============================
doctest for 3-say_my_name.py
=============================
``say_my_name()`` prints a first and last name

SUCCESSFUL TEST CONDITIONS
==========================

Testing two strings
::
>>> say_my_name = __import__('3-say_my_name').say_my_name
>>> say_my_name("Aleia", "DeVore")
My name is Aleia DeVore

Testing string as first_name with no last_name
::
>>> say_my_name("Peace")
My name is Peace 

Testing None as first_name
::
>>> say_my_name(None)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/holbertonschool-higher_level_programming/0x07-python-test_driven_development/3-say_my_name.py", line 8, in say_my_name
    raise TypeError("first_name must be a string")
TypeError: first_name must be a string

Testing None as last_name
::
>>> say_my_name("John", None)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/holbertonschool-higher_level_programming/0x07-python-test_driven_development/3-say_my_name.py", line 10, in say_my_name
    raise TypeError("last_name must be a string")
TypeError: last_name must be a string

Testing boolean as first_name
::
>>> say_my_name(True, "Doe")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/holbertonschool-higher_level_programming/0x07-python-test_driven_development/3-say_my_name.py", line 8, in say_my_name
    raise TypeError("first_name must be a string")
TypeError: first_name must be a string

Testing boolean as last_name
::
>>> say_my_name("Jane", False)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/holbertonschool-higher_level_programming/0x07-python-test_driven_development/3-say_my_name.py", line 10, in say_my_name
    raise TypeError("last_name must be a string")
TypeError: last_name must be a string

Testing more than two names
::
>>> say_my_name("Doe", "Day", "Mi")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: say_my_name() takes from 1 to 2 positional arguments but 3 were given

Testing number as first_name
::
>>> say_my_name(1, "Day")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/holbertonschool-higher_level_programming/0x07-python-test_driven_development/3-say_my_name.py", line 8, in say_my_name
    raise TypeError("first_name must be a string")
TypeError: first_name must be a string

Testing number as second_name
::
>>> say_my_name("Bee", 4)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/holbertonschool-higher_level_programming/0x07-python-test_driven_development/3-say_my_name.py", line 10, in say_my_name
    raise TypeError("last_name must be a string")
TypeError: last_name must be a string
